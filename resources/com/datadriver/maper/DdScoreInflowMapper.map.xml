<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.casic.datadriver.model.coin.DdScoreInflow">
    <resultMap id="BaseResultMap" type="com.casic.datadriver.model.coin.DdScoreInflow">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="NUMERIC"/>
        <result column="user_id" property="userId" jdbcType="NUMERIC"/>
        <result column="source_score" property="sourceScore" jdbcType="NUMERIC"/>
        <result column="source_type" property="sourceType" jdbcType="VARCHAR"/>
        <result column="source_detail" property="sourceDetail" jdbcType="VARCHAR"/>
        <result column="upd_time" property="updTime" jdbcType="VARCHAR"/>
        <result column="total" property="total" jdbcType="NUMERIC"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="org_id" property="orgId" jdbcType="NUMERIC"/>
        <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, source_score, source_type, source_detail, upd_time, total, user_name, org_id, org_name
    </sql>

    <insert id="add" parameterType="com.casic.datadriver.model.coin.DdScoreInflow">
    insert into dd_score_inflow (id, user_id, source_score, source_type, source_detail, upd_time, user_name, org_id, org_name)
    values (#{id,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}, #{sourceScore,jdbcType=NUMERIC},
      #{sourceType,jdbcType=VARCHAR}, #{sourceDetail,jdbcType=VARCHAR}, #{updTime,jdbcType=VARCHAR},
       #{userName,jdbcType=VARCHAR}, #{orgId,jdbcType=NUMERIC}, #{orgName,jdbcType=VARCHAR})
    </insert>
    <select id="getByUid" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM dd_score_inflow
        WHERE
        user_id=#{userId}
    </select>

    <select id="getTodayDetailScore" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM dd_score_inflow
        WHERE user_id=#{userId} AND source_detail=#{sourceDetail}
    </select>
    <select id="getTypeTotalScore" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM dd_score_inflow
        WHERE user_id=#{userId} AND source_type=#{sourceType}
    </select>
    <!--<select id="getAll" resultMap="BaseResultMap">-->
        <!--SELECT <include refid="columns"/>-->
        <!--FROM dd_score_inflow ddsin-->
        <!--<include refid="dynamicWhere" />-->
        <!--<if test="@Ognl@isNotEmpty(orderField)">-->
            <!--order by ${orderField} ${orderSeq}-->
        <!--</if>-->
        <!--<if test="@Ognl@isEmpty(orderField)">-->
            <!--order by id  desc-->
        <!--</if>-->
    <!--</select>-->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM dd_score_inflow ddsin
        WHERE
        1=1
        <if test="@Ognl@isNotEmpty(userName)"> AND ddsin.user_name LIKE #{userName} </if>
        <if test="@Ognl@isNotEmpty(sourceType)"> AND ddsin.source_type LIKE #{sourceType}</if>
        <if test="@Ognl@isNotEmpty(orgName)"> AND ddsin.org_name LIKE #{orgName}</if>
        <if test="@Ognl@isNotEmpty(sourceDetail)"> AND ddsin.source_detail LIKE #{sourceDetail} escape '|'</if>
        <if test="@Ognl@isNotEmpty(begincreatetime)"> AND ddsin.upd_time LIKE #{begincreatetime}</if>
        <if test="@Ognl@isNotEmpty(orderField)">
            order by ${orderField} ${orderSeq}
        </if>
    </select>

    <delete id="delById" parameterType="java.lang.Long">
		DELETE FROM dd_score_inflow
		WHERE
		id=#{id}
	</delete>
    <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM dd_score_inflow
        WHERE
        id=#{id}
    </select>
    <update id="update" parameterType="com.casic.datadriver.model.coin.DdScoreInflow">
        UPDATE dd_score_inflow
        <set>
            <if test="userId !=null">
                user_id = #{userId,jdbcType=NUMERIC},
            </if>
            <if test="sourceScore !=null">
                source_score = #{sourceScore,jdbcType=VARCHAR},
            </if>
            <if test="sourceType !=null">
                source_type = #{sourceType,jdbcType=NUMERIC},
            </if>
            <if test="sourceDetail !=null">
                source_detail = #{sourceDetail,jdbcType=VARCHAR},
            </if>
            <if test="updTime !=null">
                upd_time = #{updTime,jdbcType=VARCHAR},
            </if>
            <if test="total !=null">
                total = #{total,jdbcType=VARCHAR},
            </if>
            <if test="userName !=null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="orgId !=null">
                org_id = #{orgId,jdbcType=NUMERIC},
            </if>
            <if test="orgName !=null">
                org_name = #{orgName,jdbcType=VARCHAR}
            </if>
        </set>
        WHERE
        id = #{id, jdbcType=NUMERIC}
    </update>

</mapper>